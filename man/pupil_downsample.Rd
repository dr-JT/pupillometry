% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pupil_downsample.R
\name{pupil_downsample}
\alias{pupil_downsample}
\title{Downsample pupil data into fixed **time** windows (ms) and average}
\usage{
pupil_downsample(
  x,
  window,
  na_allowed = 0.5,
  even_window = c("mean", "left", "right", "start", "end")
)
}
\arguments{
\item{x}{A data frame imported with `pupil_read()`.}

\item{window}{Positive integer; the **time** window width in **milliseconds**.}

\item{even_window}{Strategy for the timestamp when the **number of samples in a
window is even**. One of `c("mean","left","right","start","end")`:
- `"mean"`: numeric midpoint of the two central **sample times**;
- `"left"` / `"right"`: the left- or right-middle **sample time**;
- `"start"` / `"end"`: the **first**/**last** sample time in the bin.
Default: `"left"`.}

\item{na_allow}{Proportion (0–1). The **maximum** fraction of missing values
allowed in a window to still compute a mean. If the fraction of missing
values exceeds `na_allow`, the downsampled value is set to `NA_real_`.
Default is `0.5` (require at least half of values present).}
}
\value{
A data frame with the downsampled time and mean pupil size for each time window.
}
\description{
Aggregates pupil data into **non-overlapping** windows of width
`window` (milliseconds), computing the mean of pupil size per window.

- Within each window, if the number of samples is **odd**, the timestamp is the
  exact middle sample’s time; if **even**, the timestamp is chosen via `even_window`.
}
\details{
**Time-based binning.** Bins are created purely by time boundaries of width
`window` starting from `t0 = min(time)`. This is robust to missing samples
and irregular sampling—any samples falling within the same time window are
aggregated together.

**Representative time.** For **odd** counts, the middle sample’s time is used.
For **even** counts, `even_time` controls whether the timestamp is the numeric
midpoint of the two central sample times (`"mean"`), one of the central sample
times (`"left"`/`"right"`), or the first/last sample time in the bin
(`"start"`/`"end"`). Set `snap_to_existing = TRUE` with `"mean"` to avoid
fractional timestamps.
}
